---
apiVersion: v1
kind: Namespace
metadata:
  name: interview-app

---
# namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: interview-backend-deployment
  namespace: interview-app
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: interview-backend
  replicas: 3 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: interview-backend
    spec:
      containers:
        - name: interview-backend
          image: interview:backend-1.5
          ports:
            - containerPort: 8081
          readinessProbe: # readines Probe to check if nginx can serve
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8081
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 1
          # lifecycle:
          #   preStop:
          #     exec:
          #       command: ["/bin/ash", "-c", "sleep 2"]
          env:
            - name: NODE_ENV
              value: production
            - name: MONGODB_URL
              valueFrom:
                secretKeyRef:
                  key: mongodb_url
                  name: backend-secrets
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt_secret
                  name: backend-secrets

# frontend part
apiVersion: apps/v1
kind: Deployment
metadata:
  name: interview-frontend-deployment
  namespace: interview-app
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: interview-frontend
  replicas: 2 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: interview-frontend
    spec:
      containers:
        - name: interview-frontend
          image: interview:frontend-1.4
          ports:
            - containerPort: 80
          readinessProbe: # readines Probe to check if nginx can serve
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 80
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/ash", "-c", "sleep 2"]
